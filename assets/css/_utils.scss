
// var
$colorP1: #1976d2;
$colorP2: #2196f3;
$colorP3: #bbdefb;
$colorB1: #cddc39;
$colorW: #fff;
$colorB: #000;
$colorG1: #757575;
$colorG2: #bdbdbd;
$colorG3: #eee;

// mixin

// media query
$break-small: 320px;
$break-medium: 768px;
$break-large: 1280px;
@mixin respond-to($media) {
  @if $media== "small" {
    @media only screen and (max-width: $break-small) {
      @content;
    }
  } @else if $media== "medium" {
    @media only screen and (max-width: $break-medium) {
      @content;
    }
  } @else if $media== "small-medium" {
    @media (min-width: #{$break-small}) and (max-width: #{$break-medium - 1px}) {
      @content;
    }
  } @else if $media== "medium-large" {
    @media (min-width: #{$break-medium}) and (max-width: #{$break-large - 1px}) {
      @content;
    }
  } @else if $media== "large" {
    @media (max-width: #{$break-large - 1px}) {
      @content;
    }
  } @else if $media== "large-over" {
    @media only screen and (min-width: $break-large) {
      @content;
    }
  }
}

@mixin dfWrap($d: row, $j: space-between, $a: center, $w: wrap, $g: 0) {
  display: flex;
  flex-direction: $d; // row column
  justify-content: $j; // space-around space-evenly space-between center flex-start flex-end stretch
  align-items: $a; // center flex-start flex-end
  flex-wrap: $w;
  gap: $g;
}

@mixin colList($c: 2, $g: 20px) {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  flex-wrap: wrap;
  gap: $g;
  &>* {
    width: calc( ( 100% - (#{$g}*(#{$c} - 1)) ) / #{$c} );
  }
}

@mixin colArea($c: 2, $g: 20px) {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  flex-wrap: wrap;
  gap: $g;
  &>* {
    width: calc( ( 100% - (#{$g}*(#{$c} - 1)) ) / #{$c} );
  }
}

/*@for $i from 1 to 6 {
  .col#{$i}Area {
    @include dfWrap($j: space-between, $a: stretch);
    &>* {
      width: calc( ( 100% - (20px*(#{$i} - 1)) ) / #{$i} );
    }
  }
}*/

@mixin dgWrap($c: 3, $g: 10px) {
  display: grid;
  grid-template-columns: repeat($c, 1fr);
  gap: $g;
}

@mixin paArea($t: 0, $l: 0, $r: auto, $b: auto, $x: 0, $y: 0) {
  position: absolute;
  top: $t;
  left: $l;
  right: $r;
  bottom: $b;
  transform: translateX($x) translateY($y);
}

@mixin bgStyle($r: no-repeat, $x: center, $y: center, $s: cover) {
  background-repeat: $r;
  background-position-x: $x;
  background-position-y: $y;
  background-size: $s; // contain cover
}

@mixin inSpace($s:0, $d: top) {
  margin-#{$d}: $s;
  @include respond-to(medium) {
    margin-#{$d}: $s / 2;
  }
}

@mixin biBox {
  @include dfWrap($g:10px);
  border: $colorG2 solid 1px;
  border-radius: 20px;
  padding: 20px 20px;
  min-height: 100px;
  .txt {
    flex-grow: 1;
    @include dfWrap($d: column, $a: flex-start, $g: 10px,);
  }
  .tit {
    font-size: 1.6rem;  font-weight: bold;
    color: $colorP1;
  }
  .exp {
    font-size: 1.4rem;
    color: $colorG1;
  }
}

// 임시
nav a,
nav button {
  @include dfWrap($j: center,);
  // height: 50px;
  min-width: 50px;
  padding: 2px 10px;
}
